// Generated by CoffeeScript 1.9.3
(function() {
  var _table, api, container, div, h3, img, insert, ref, runAjax, secret, table, tbody, td, th, thead, tr, username;
  _table = new Realtime.Models.orderTable;
  api = Realtime.api;
  username = Realtime.config.username;
  secret = Realtime.config.secret;
  container = $('.last-touch-table')[0];
  runAjax = function() {
    return _table.fetch({
      type: 'POST',
      data: _table.params,
      dataType: "json",
      headers: {
        'X-WSSE': api.wsse.generateAuth(username, secret)['X-WSSE']
      }
    }).then(function() {
      return React.render(Realtime.Components.ordersTable({
        model: _table
      }), container);
    });
  };
  Realtime.Components.spinnerComp = React.createClass({
    render: function() {
      return img({
        src: 'images/ajax-loader.gif',
        className: 'spinner ' + this.props.spinner
      });
    }
  });
  ref = React.DOM, table = ref.table, div = ref.div, thead = ref.thead, tr = ref.tr, td = ref.td, th = ref.th, tbody = ref.tbody, h3 = ref.h3, img = ref.img;
  insert = React.createElement;
  Realtime.Components.ordersTable = React.createClass({
    mixins: [Backbone.React.Component.mixin],
    render: function() {
      var addComma;
      addComma = d3.format(',');
      return div({
        className: 'last-touch-orders-table'
      }, h3({
        className: 'sec-colour'
      }, 'Sign-ups by channel'), div({
        id: 'totals'
      }, insert(Realtime.Components.spinnerComp, {
        spinner: this.state.model.spinner
      }), table({
        className: 'table table-striped table-hover table-bordered ' + this.state.model.tableVis
      }, thead({}, tr({}, th({}, 'Channel'), th({}, 'Sign-ups'))), tbody({}, this.state.model.channels.map(function(channel) {
        return tr({
          key: channel.name
        }, td({}, channel.name), td({
          className: 'channelMetric'
        }, addComma(channel.value)));
      })))));
    },
    componentDidMount: function() {
      runAjax();
      return setInterval(runAjax, 5000);
    }
  });
  Realtime.Components.ordersTable = React.createFactory(Realtime.Components.ordersTable);
  return React.render(Realtime.Components.ordersTable({
    model: _table
  }), container);
})();
